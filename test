import logging
from aiogram import Bot, Dispatcher, types
from aiogram.types import FSInputFile
from aiogram.filters import Command
from aiogram.enums import ContentType
from aiogram.types import Message
from aiogram.types import BufferedInputFile
from PIL import Image, ImageDraw, ImageFont
import io
import asyncio

TOKEN = "7841909549:AAE-IP8TXNsmHVZmuXBjb6CEiMvxaljJNz8"

# إعدادات البوت
bot = Bot(token=TOKEN)
dp = Dispatcher()

# تخزين الصورة المرسلة
user_images = {}

# استقبال الصورة من المستخدم
@dp.message(lambda message: message.photo)
async def handle_photo(message: Message):
    photo = message.photo[-1]
    file_id = photo.file_id

    file = await bot.get_file(file_id)
    file_path = file.file_path
    downloaded_file = await bot.download_file(file_path)

    # تخزين الصورة في القاموس
    user_images[message.from_user.id] = downloaded_file

    await message.answer("✅ تم استلام الصورة! الآن، أرسل لي النص الذي تريد إضافته عليها.")

# استقبال النص وإضافته أسفل الصورة
@dp.message(lambda message: message.text)
async def handle_text(message: Message):
    user_id = message.from_user.id

    if user_id not in user_images:
        await message.answer("⚠️ لم ترسل صورة بعد! الرجاء إرسال صورة أولاً.")
        return

    # فتح الصورة المحفوظة
    image = Image.open(user_images[user_id])
    draw = ImageDraw.Draw(image)

    # النص المرسل
    text = message.text

    # تحميل الخط وضبط الحجم المبدئي
    font_size = 100
    font = ImageFont.truetype("arial.ttf", font_size)

    # حساب حجم النص
    text_bbox = draw.textbbox((0, 0), text, font=font)
    text_width = text_bbox[2] - text_bbox[0]
    text_height = text_bbox[3] - text_bbox[1]

    # تحديد موقع النص في أسفل الصورة
    image_width, image_height = image.size
    text_x = (image_width - text_width) // 2 - 30
    text_y = image_height - text_height - 90  # 20 بكسل هو هامش من الأسفل

    # تكبير النص ليتناسب مع عرض الصورة
    while text_width < image_width * 0.7:
        font_size += 1
        font = ImageFont.truetype("arial.ttf", font_size)
        text_bbox = draw.textbbox((0, 0), text, font=font)
        text_width = text_bbox[2] - text_bbox[0]

    # إضافة النص إلى الصورة مع حدود سوداء
    draw.text((text_x, text_y), text, font=font, fill="white", stroke_width=5, stroke_fill="black")

    # حفظ الصورة في ملف مؤقت وإرسالها
    img_io = io.BytesIO()
    image.save(img_io, format="PNG")
    img_io.seek(0)

    await message.answer_photo(photo=BufferedInputFile(img_io.getvalue(), filename="edited_image.png"))

    # حذف الصورة بعد المعالجة
    del user_images[user_id]

# تشغيل البوت
async def main():
    logging.basicConfig(level=logging.INFO)
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
